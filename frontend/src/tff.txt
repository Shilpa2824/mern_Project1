import React, { useEffect ,useState} from 'react'
import { useContext } from 'react'
import { ShopContext } from '../context/ShopContext'
import Title from './Title';
import ProductItem from './ProductItem';

const LatestCollection = () => {

    const { products } = useContext(ShopContext);
    const [latestProducts,setLatestProducts] = useState([]);
    
    useEffect(()=>{
        setLatestProducts(products.slice(0,10));
    },[])
    return (
        <div className='my-10'>
                    <div className='text-center py-8 text-3xl'>
                    <Title text1={'LATEST'} text2={'COLLECTIONS'}/>
                    <p className='w-3/4 m-auto text-xs sm:text-sm md:text-base text-gray-600'>
                    "Fashion is about dressing according to what's fashionable .Style is more about being yourself"
                    </p>
                    </div>

                    {/* Rendring Products */}
                    <div className='grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4 gap-y-6'>
                        {
                            latestProducts.map((item,index)=>(
                                <ProductItem key={index} id={item._id} image={item.image} name={item.name} price={item.price} />
                            ))
                        }
                    </div>
        </div>
    )
}

export default LatestCollection



import React, { useContext, useEffect, useState } from 'react'
import { ShopContext } from '../context/ShopContext'
import Title from './Title';
import ProductItem from './ProductItem';


const BestSeller = () => {

    const { products } = useContext(ShopContext);
    const [bestSeller,setBestSeller] = useState([]);

    useEffect(()=>{
            const bestProduct = products.filter((item)=>(item.bestseller));
            setBestSeller(bestProduct.slice(0,5))
    },[])

    
  
    return (
        <div className='my-10 '>
            <div className='text-center text-3xl py-8'>
                <Title text1={'BEST'} text2={'SELLERS'} />
                <p className='w-3/4 m-auto text-xs sm:text-sm md:text-base text-gray-600'>
                "Buy less. Choose well. Make it last. Quality, not quantity. Everybody's buying far too many clothes." 
                </p>
            </div>
            <div className='grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4 gap-y-6 '>
             {
                bestSeller.map((item,index)=>(
                    <ProductItem key={index} id={item._id} name={item.name} image={item.image} price={item.price} />
                ))
             }
            
            </div>
        </div>
        
    )
}

export default BestSeller

import React, { useContext, useEffect, useState } from 'react'
import { ShopContext } from '../context/ShopContext'
import { assets } from '../assets/assets';
import Title from '../components/Title';
import ProductItem from '../components/ProductItem';

const Collection = () => {
  const {products,search,showSearch} = useContext(ShopContext);
  const [showFilter,setShowFilter] = useState(false);
  const [filterProducts , setFilterProducts] = useState([]);
  const[category,setCategory] = useState([]);
  const[subCategory , setSubCategory] = useState([]);
  const[sortType,setSortType]= useState('relavant')

  const toggleCategory = (e) => {
    if(category.includes(e.target.value)) {
      setCategory(prev => prev.filter(item => item !== e.target.value))
    }
    else{
      setCategory(prev => [...prev,e.target.value])
    }
  }

  const toggleSubCategory = (e) => {
  const value = e.target.value.trim(); // Trim input value

  if (subCategory.includes(value)) {
    setSubCategory(prev => prev.filter(item => item !== value));
  } else {
    setSubCategory(prev => [...prev, value]);
  }
}


   const applyFilter = () => {
    let productsCopy = [...products];
  
    if(showSearch && search){
      productsCopy = productsCopy.filter(item => item.name.toLowerCase().includes(search.toLowerCase()));
    }

    if (category.length > 0) {
      productsCopy = productsCopy.filter(item => category.includes(item.category));
    }
  
    if (subCategory.length > 0) {
      productsCopy = productsCopy.filter(item => 
        item.subCategory && subCategory.includes(item.subCategory.trim()) // Trim subCategory value
      );
    }
  
    setFilterProducts(productsCopy);
  }
  const sortProduct = () =>{
    let fpCopy = filterProducts.slice();

    switch(sortType){
      case 'low-high':
        setFilterProducts(fpCopy.sort((a,b)=>(a.price - b.price)));
        break;
      case 'high-low':
        setFilterProducts(fpCopy.sort((a,b)=>(b.price - a.price)));
        break;
      default:
        applyFilter();
        break;
    }
  }
  
   useEffect(()=>{
    setFilterProducts(products);
  },[])

  useEffect(()=>{
    applyFilter();
  },[category,subCategory,search,showSearch])

  useEffect(()=>{
    sortProduct();
  },[sortType])
  return (
   
    <div className='flex flex-col sm:flex-row gap-1 sm:gap-10 pt-10 border-t'>
      {/* Filter option */}
      <div className='min-w-60 '>
        <p onClick={()=>setShowFilter(!showFilter)} className='my-2 text-xl dlex items-center cursor-pointer gap-2 '> Filters </p>
          <img className={`h-3 sm:hidden ${showFilter? ' rotate-90':' '}`} src={assets.dropdown_icon} alt="" />
        {/* Filters Categories */}
        <div className={`border border-gray-300 pl-5 py-3  mt-6 ${showFilter? '' :'hidden'} sm:block `}>
          <p className='mb-3 text-sm font-medium'>CATEGORIES</p>
          <div className='flex flex-col gap-2 text-sm font-light text-gray-700'>
            <p className='flex gap-2'>
              <input className='w-3' type="checkbox" value={'Men'}  onChange={toggleCategory}/>Men
            </p>
            <p className='flex gap-2'>
              <input className='w-3' type="checkbox" value={'Women'}  onChange={toggleCategory}/>Women
            </p>
            <p className='flex gap-2'>
              <input className='w-3' type="checkbox" value={'Kids'}  onChange={toggleCategory}/>Kids
            </p>
          </div>
        </div>
        {/* SubCategory Filter */}
        <div className={`border border-gray-300 pl-5 py-3 my-5  ${showFilter? '' :'hidden'} sm:block `}>
          <p className='mb-3 text-sm font-medium'>TYPE</p>
          <div className='flex flex-col gap-2 text-sm font-light text-gray-700'>
            <p className='flex gap-2'>
              <input className='w-3' type="checkbox" value={'Topwear'}   onChange={toggleSubCategory}/>Topwear
            </p> 
            <p className='flex gap-2'> 
              <input className='w-3' type="checkbox" value={'Bottomwear'}onChange={toggleSubCategory} />Bottomwear
            </p> 
            <p className='flex gap-2'> 
              <input className='w-3' type="checkbox" value={'Winterwear'}onChange={toggleSubCategory} />Winterwear
            </p>
          </div>
        </div>
      </div>
      {/* Right Side */}
      <div className='flex-1'>

      <div className='flex justify-between text-base sm:text-2xl mb-4'>
    <Title text1={'ALL'} text2={'COLLECTIONS'}/>
    {/* Product Sort */}
  <select  onChange={(e)=>setSortType(e.target.value)} className='border-2 border-gray-300 text-sm px-2'>
    <option value="relavant">Sort by: Relevant</option>
    <option value="low-high">Sort by: Low to High</option>
    <option value="high-low">Sort by: High to Low</option>
    </select>    
      </div>
      {/* Map Products */}
      <div className='grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 gap-y-6'>
    {
      filterProducts.map((item,index)=>(
        <ProductItem key={index} name={item.name} id={item._id} price={item.price} image={item.image} />
      ))
    }
      </div>
      </div>
    </div>
  )
}

export default Collection
